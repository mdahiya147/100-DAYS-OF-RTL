
// 8X1 MUX 

//RTL
module Mux_8to1 (I0,I1,I2,I3,I4,I5,I6,I7,S,Y) ;

input I0 ,I1,I2,I3,I4,I5,I6,I7 ;
input [2:0] S ;
output reg Y ;

always @ (S)
begin
    case (S)
    3'b000 : Y = I0;
    3'b001 : Y = I1;
    3'b010 : Y = I2;
    3'b011 : Y = I3;
    3'b100 : Y = I4;
    3'b101 : Y = I5;
    3'b110 : Y = I6;
    3'b111 : Y = I7;
    default : Y = 0;
    endcase
end

endmodule

//TB

`timescale 1ns / 1ps
module Mux_8to1_tb ();

reg I0,I1,I2,I3,I4,I5,I6,I7 ;
reg [2:0] S ;
wire Y ;

//instantiation 
Mux_8to1 DUT ( .I0(I0) , .I1(I1) , .I2(I2) , .I3(I3) , .I4(I4) , .I5(I5) , .I6(I6) , .I7(I7) , .S(S) , .Y(Y) ) ;

initial
begin
I0 = 0; 
I1 = 0; 
I2 = 0;
I3 = 0;
I4 = 0;
I5 = 0;
I6 = 0;
I7 = 0;
S = 0;
end

initial 
begin
I0 = 0; 
I1 = 1; 
I2 = 1;
I3 = 0;
I4 = 0;
I5 = 1;
I6 = 0;
I7 = 1;
S = 5;
end

